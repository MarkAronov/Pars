{
	"info": {
		"_postman_id": "f1adce66-b6f7-41ae-b2ad-1614efbdde69",
		"name": "Pars requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40447662"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User Get All",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": " ",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Get One",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": " ",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/user/u/asdcd",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"u",
								"asdcd"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Get Self",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": " ",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "\"{\\\"requestedFields\\\":[\\\"username\\\",\\\"avatar\\\"]}\"",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/self",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"self"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Update Self Password",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "\"{\\\"currentPassword\\\":\\\"bbDFFDF232\\\",\\\"newPassword\\\":\\\"bbDFFDF2s55\\\"}\"",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/self/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"self",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Update Self Important",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"asdid\",\r\n    \"password\": \"bbDFFDF2s55\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/me/important",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"me",
								"important"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Update Self Regular",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "\"{\\n  \\\"bio\\\": \\\"yeegtash\\\"\\n}\"",
									"type": "text",
									"disabled": true
								},
								{
									"key": "avatar",
									"type": "file",
									"src": "/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/1.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/regular",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"regular"
							]
						}
					},
					"response": []
				},
				{
					"name": "User LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200 || pm.response.code === 201){\r",
									"    pm.environment.set('token', pm.response.json().token)\r",
									"}\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - username, displayName, bio, and token\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.user).to.be.an('object');\r",
									"    pm.expect(responseData.user.username).to.exist;\r",
									"    pm.expect(responseData.user.displayName).to.exist;\r",
									"    pm.expect(responseData.user.bio).to.exist;\r",
									"    pm.expect(responseData.token).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Token is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"var template = `\r",
									"<div>\r",
									"    <h3>User Details</h3>\r",
									"    <p>Username: {{response.user.username}}</p>\r",
									"    <p>Display Name: {{response.user.displayName}}</p>\r",
									"    <p>Bio: {{response.user.bio}}</p>\r",
									"    <p>Avatar: {{response.user.avatar}}</p>\r",
									"    <p>Background Image: {{response.user.backgroundImage}}</p>\r",
									"    <p>Token: {{response.token}}</p>\r",
									"</div>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return {response: pm.response.json()}\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "ddd@aa.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password12345678@",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User LogOut",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/user/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "User LogOutAll",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/user/logoutall",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logoutall"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code === 200 || pm.response.code === 201){\r",
									"    console.log(pm.response)\r",
									"    pm.environment.set('token', pm.response.json().token)\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"type": "file",
									"src": [
										"postman-cloud:///1efc876f-1c99-41f0-a91a-02a2c8f34278",
										{
											"actual": null,
											"name": "",
											"path": ""
										}
									],
									"disabled": true
								},
								{
									"key": "backgroundImage",
									"value": "",
									"type": "file",
									"disabled": true
								},
								{
									"key": "username",
									"value": "ddddddddddddddd",
									"type": "text"
								},
								{
									"key": "email",
									"value": "ddd@aa.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password12345678@",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Delete Self",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Delete Partial",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "deleteParams",
									"value": "avatar,backgroundImage",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user/partial",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"partial"
							],
							"query": [
								{
									"key": "del",
									"value": "j",
									"disabled": true
								},
								{
									"key": "del",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "User Requests"
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Post Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "images",
									"type": "file",
									"src": [
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/1.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/2.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/3.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/4.png"
									],
									"disabled": true
								},
								{
									"key": "videos",
									"type": "file",
									"src": "/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/w1.webm",
									"disabled": true
								},
								{
									"key": "topic",
									"value": "brgb",
									"type": "text"
								},
								{
									"key": "thread",
									"value": "3c3c4c3",
									"type": "text"
								},
								{
									"key": "title",
									"value": "vvvvvvvvvvv",
									"type": "text"
								},
								{
									"key": "desciption",
									"value": "yes",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/post",
							"host": [
								"{{url}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/post/678063e4cc7263a62692fd57",
							"host": [
								"{{url}}"
							],
							"path": [
								"post",
								"678063e4cc7263a62692fd57"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "\"{    \\n\\\"mentionedParents\\\": [\\\"635c544fb9e028b49167bf58\\\"]\\n}\"",
									"type": "text"
								},
								{
									"key": "videos",
									"type": "file",
									"src": "postman-cloud:///1eeceac6-5855-4e00-9111-d8186aca5af1"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/D:/Media/__salome_fate_and_1_more_drawn_by_torichamaru__09ddda79d30a9214a1d0a8204fba0e1e.jpg",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/post/665330749823b8fa43e93a52",
							"host": [
								"{{url}}"
							],
							"path": [
								"post",
								"665330749823b8fa43e93a52"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/post/678242229a2b4058c27a28a7",
							"host": [
								"{{url}}"
							],
							"path": [
								"post",
								"678242229a2b4058c27a28a7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post List All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/post",
							"host": [
								"{{url}}"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			],
			"description": "Post Requests"
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/search/?q=asddcd",
							"host": [
								"{{url}}"
							],
							"path": [
								"search",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "asddcd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Media Read",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/media/avatars/avatar-1710388503523-0dcd97a336a3677f10e6f5d56fe9b341.jpg",
							"host": [
								"{{url}}"
							],
							"path": [
								"media",
								"avatars",
								"avatar-1710388503523-0dcd97a336a3677f10e6f5d56fe9b341.jpg"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Threads",
			"item": [
				{
					"name": "Thread Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "images",
									"type": "file",
									"src": [
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/1.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/2.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/3.png",
										"/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/4.png"
									]
								},
								{
									"key": "videos",
									"type": "file",
									"src": "/D:/Programming/Pars/Pars-Backend-Nodejs/__tests__/assets/w1.webm"
								},
								{
									"key": "topic",
									"value": "brgb",
									"type": "text"
								},
								{
									"key": "title",
									"value": "vvvvvvvvvvv",
									"type": "text"
								},
								{
									"key": "desciption",
									"value": "yes",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/thread",
							"host": [
								"{{url}}"
							],
							"path": [
								"thread"
							]
						}
					},
					"response": []
				},
				{
					"name": "Thread Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/thread/678063e4cc7263a62692fd56",
							"host": [
								"{{url}}"
							],
							"path": [
								"thread",
								"678063e4cc7263a62692fd56"
							]
						}
					},
					"response": []
				},
				{
					"name": "Thread Get Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/thread/65fc7a2489124e613172bfc6",
							"host": [
								"{{url}}"
							],
							"path": [
								"thread",
								"65fc7a2489124e613172bfc6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Thread Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/thread/678432247db1e42c004acba4",
							"host": [
								"{{url}}"
							],
							"path": [
								"thread",
								"678432247db1e42c004acba4"
							]
						}
					},
					"response": []
				}
			],
			"description": "Thread Requests"
		},
		{
			"name": "Topics",
			"item": [
				{
					"name": "Topic Create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "cover",
									"type": "file",
									"src": "postman-cloud:///1efc876f-1245-4140-8ef4-0297e50a3d4f"
								},
								{
									"key": "name",
									"value": "test",
									"type": "text"
								},
								{
									"key": "description",
									"value": "test",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/topic",
							"host": [
								"{{url}}"
							],
							"path": [
								"topic"
							]
						}
					},
					"response": []
				},
				{
					"name": "Topic Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/topic/test",
							"host": [
								"{{url}}"
							],
							"path": [
								"topic",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Topic Get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/topics",
							"host": [
								"{{url}}"
							],
							"path": [
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Topic Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/topic/test",
							"host": [
								"{{url}}"
							],
							"path": [
								"topic",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"description": "Topic Requests"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}